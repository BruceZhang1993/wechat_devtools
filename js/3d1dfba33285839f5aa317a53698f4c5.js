'use strict';!function(require,directRequire){function a(a){let b=g.createHash('md5');return b.update(a).digest('hex')}const b=require('fs'),c=require('path'),d=require('mkdir-p'),e=require('babel-core'),f=require('uglify-js'),g=require('crypto'),h=require('./162bf2ee28b76d3b3d95b685cede4146.js'),i=require('babel-code-frame'),j=require('./common/locales/index.js'),{bufToUTF8:k}=require('./efc820e1b92d6e4063535296d4a24213.js'),{FILE_NOT_UTF8:l,BABEL_TRANS_JS_ERR:m,UGLIFY_JS_ERR:n,BABILI_JS_ERR:o}=require('./949d8235c744ced2a80121e4dba34c28.js');var p={};module.exports=function(g,q={}){p[g.hash]||(p[g.hash]={});let r=p[g.hash];return new Promise(async(p,s)=>{let{es6:u,minified:v,newFeature:w}=g.setting,{distPath:x}=q,y=await h(g),z=y.getAllJSFiles();for(let g=0,h=z.length;g<h;g++){let h=z[g],p=y.getFile(h,null),q=k(p),A='';if(void 0===q){let a=new Error(j.config.FILE_NOT_UTF8.format(h));return a.code=l,s(a)}let B=Date.now(),t=a(q),C=`${h}_${u}_${v}_${w}`;if(r[C]&&r[C].md5===t)q=r[C].jsCode,A=r[C].map;else{if(!(u||v))try{const a=/\/\/[#|@] sourceMappingURL=[\s]*(\S*)[\s]*$/.exec(q);if(a&&a[1])if(/\.js\.map$/.test(a[1])){let d=c.dirname(c.join(y.srcPath,h));A=b.readFileSync(c.join(d,a[1])),A=JSON.stringify(JSON.parse(A))}else{const b=a[1].split('base64,')[1];A=Buffer.from(b,'base64').toString(),A=JSON.stringify(JSON.parse(A))}}catch(a){A=''}else if(u){try{let a=e.transform(q,{presets:['es2015','stage-0'],sourceMaps:'map',sourceFileName:h,babelrc:!1});q=a.code,A=JSON.stringify(a.map)}catch(a){let b=`file: ${h}\n ${a.message}\n ${i(q,a.loc.line,0<a.loc.column?a.loc.column:1)}`,c=new Error(b);return c.code=m,s(c)}if(v){let a=A?{content:A,filename:h}:{content:null,filename:h},b=f.minify(q,{toplevel:!0,sourceMap:a});if(b.error){let a=`file: ${h}\n ${b.error.message}\n ${i(q,b.error.line,0<b.error.col?b.error.col:1)}`,c=new Error(a);return c.code=n,s(c)}q=b.code,A=b.map}}else try{let a=e.transform(`(function(){\n ${q} \n})()`,{presets:['minify'],sourceMap:'map',sourceFileName:h,babelrc:!1});q=a.code,A=JSON.stringify(a.map)}catch(a){let b=`file: ${h}\n ${a.message}\n ${i(q,a.loc.line,0<a.loc.column?a.loc.column:1)}`,c=new Error(b);return c.code=o,s(c)}r[C]={md5:t,jsCode:q,map:A}}console.log(`${h} compilejs cost time: ${Date.now()-B}`);let D=c.join(x,h),E=c.dirname(D);d.sync(E),b.writeFileSync(D,q)}p()})}}(require('lazyload'),require);